{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Two ADFS servers configured and joined to existing domain.",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Network Configuration"
          },
          "Parameters": [
            "VPCCIDR",
            "VPCID",
            "PrivateSubnet1ID",
            "PrivateSubnet2ID",
            "PublicSubnet1ID",
            "PublicSubnet2ID"
          ]
        },
        {
          "Label": {
            "default": "Amazon EC2 Configuration"
          },
          "Parameters": [
            "KeyPairName",
            "ADFSInstanceType",
            "LatestAmiId"
          ]
        },
        {
          "Label": {
            "default": "Microsoft Active Directory Configuration"
          },
          "Parameters": [
            "DomainDNSName",
            "DomainNetBIOSName",
            "RestoreModePassword",
            "DomainAdminUser",
            "DomainAdminPassword",
            "DomainMemberSGID"
          ]
        },
        {
          "Label": {
            "default": "ADFS Configuration"
          },
          "Parameters": [
            "S3BucketName",
            "S3KeyPrefix"
          ]
        }
      ],
      "ParameterLabels": {
        "DomainAdminPassword": {
          "default": "Domain Admin Password"
        },
        "DomainAdminUser": {
          "default": "Domain Admin User Name"
        },
        "DomainDNSName": {
          "default": "Domain DNS Name"
        },
        "DomainMemberSGID": {
          "default": "Domain Member Security Group ID"
        },
        "DomainNetBIOSName": {
          "default": "Domain NetBIOS Name"
        },
        "KeyPairName": {
          "default": "Key Pair Name"
        },
        "PrivateSubnet1ID": {
          "default": "Private Subnet 1 ID"
        },
        "PrivateSubnet2ID": {
          "default": "Private Subnet 2 ID"
        },
        "PublicSubnet1ID": {
          "default": "Public Subnet 1 ID"
        },
        "PublicSubnet2ID": {
          "default": "Public Subnet 2 ID"
        },
        "LatestAmiId": {
          "default": "SSM Parameter to Grab Latest AMI ID"
        },
        "S3BucketName": {
          "default": "ADFS S3 Bucket Name"
        },
        "S3KeyPrefix": {
          "default": "S3 Key Prefix"
        },
        "VPCCIDR": {
          "default": "VPC CIDR"
        },
        "VPCID": {
          "default": "VPC ID"
        },
        "ADFSInstanceType": {
          "default": "ADFS Server Instance Type"
        }
      }
    }
  },
  "Parameters": {
    "DomainAdminPassword": {
      "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
      "Description": "Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols",
      "MaxLength": "32",
      "MinLength": "8",
      "NoEcho": "true",
      "Type": "String"
    },
    "DomainAdminUser": {
      "AllowedPattern": "[a-zA-Z0-9]*",
      "Default": "Admin",
      "Description": "User name for the account that will be added as Domain Administrator. This is separate from the default \"Administrator\" account",
      "MaxLength": "25",
      "MinLength": "5",
      "Type": "String"
    },
    "DomainDNSName": {
      "AllowedPattern": "[a-zA-Z0-9\\-]+\\..+",
      "Default": "domain.local",
      "Description": "Fully qualified domain name (FQDN) of the forest root domain e.g. corp.example.com",
      "MaxLength": "25",
      "MinLength": "3",
      "Type": "String"
    },
    "DomainMemberSGID": {
      "Description": "ID of the Domain Member Security Group (e.g., sg-7f16e910)",
      "Type": "AWS::EC2::SecurityGroup::Id"
    },
    "DomainNetBIOSName": {
      "AllowedPattern": "[a-zA-Z0-9\\-]+",
      "Default": "domain",
      "Description": "NetBIOS name of the domain (upto 15 characters) for users of earlier versions of Windows e.g. CORP",
      "MaxLength": "15",
      "MinLength": "1",
      "Type": "String"
    },
    "KeyPairName": {
      "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "LatestAmiId": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base"
    },
    "PrivateSubnet1ID": {
      "Description": "ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PrivateSubnet2ID": {
      "Description": "ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PublicSubnet1ID": {
      "Description": "ID of the public subnet 1 in Availability Zone 1 (e.g., subnet-e3246d8e)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PublicSubnet2ID": {
      "Description": "ID of the public subnet 2 in Availability Zone 2 (e.g., subnet-e3246d8e)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "S3BucketName": {
      "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
      "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
      "Default": "codedeploy-alex",
      "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
      "Type": "String"
    },
    "S3KeyPrefix": {
      "AllowedPattern": "^[0-9a-zA-Z-/]*$",
      "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
      "Default": "adfs/",
      "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
      "Type": "String"
    },
    "VPCCIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.0.0/16",
      "Description": "CIDR Block used by the VPC",
      "Type": "String"
    },
    "VPCID": {
      "Description": "ID of the VPC (e.g., vpc-0343606e)",
      "Type": "AWS::EC2::VPC::Id"
    },
    "AppstreamStackName": {
      "Description": "Name of Appstream Stack",
      "Type": "String"
    },
    "ADFSInstanceType": {
      "AllowedValues": [
        "t2.large",
        "c4.2xlarge"
      ],
      "Default": "t2.large",
      "Description": "Instance type for ADFS Servers",
      "Type": "String"
    }
  },
  "Rules": {
    "SubnetsInVPC": {
      "Assertions": [
        {
          "Assert": {
            "Fn::EachMemberIn": [
              {
                "Fn::ValueOfAll": [
                  "AWS::EC2::Subnet::Id",
                  "VpcId"
                ]
              },
              {
                "Fn::RefAll": "AWS::EC2::VPC::Id"
              }
            ]
          },
          "AssertDescription": "All subnets must in the VPC"
        }
      ]
    }
  },
  "Mappings": {
    "AWSAMIRegionMap": {
      "AMI": {
        "WS2012R2": "Windows_Server-2012-R2_RTM-English-64Bit-Base-2019.04.26"
      },
      "ap-northeast-1": {
        "WS2012R2": "ami-046ee6b9fdfea3161"
      },
      "ap-northeast-2": {
        "WS2012R2": "ami-0025e3f1eacf7d130"
      },
      "ap-south-1": {
        "WS2012R2": "ami-02f0a763aeda0077b"
      },
      "ap-southeast-1": {
        "WS2012R2": "ami-0a0a6f3903d43aedb"
      },
      "ap-southeast-2": {
        "WS2012R2": "ami-011faffd94de75db6"
      },
      "ca-central-1": {
        "WS2012R2": "ami-077d8740d7c88a083"
      },
      "eu-central-1": {
        "WS2012R2": "ami-02e33b7f1cfec85c3"
      },
      "eu-west-1": {
        "WS2012R2": "ami-03cc072e1eb1504ad"
      },
      "eu-west-2": {
        "WS2012R2": "ami-0ddbb61e1ac0b740c"
      },
      "sa-east-1": {
        "WS2012R2": "ami-06e9846cb29996e35"
      },
      "us-east-1": {
        "WS2012R2": "ami-0b6158cfa2ae7b493"
      },
      "us-east-2": {
        "WS2012R2": "ami-0f33ca435060daee9"
      },
      "us-west-1": {
        "WS2012R2": "ami-0d4f8a9abc53cca9c"
      },
      "us-west-2": {
        "WS2012R2": "ami-00ddbceb28e44364c"
      }
    }
  },
  "Conditions": {
    "RegionCondition": {
      "Fn::Equals": [
        {
          "Ref": "AWS::Region"
        },
        "us-east-2"
      ]
    }
  },
  "Resources": {
    "ADFSRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Resource": {
                    "Fn::Sub": [
                      "arn:aws:s3:::${S3BucketName}/${S3KeyPrefix}*",
                      {
                        "Partition": {
                          "Fn::If": [
                            "RegionCondition",
                            "us-east-2",
                            "aws"
                          ]
                        }
                      }
                    ]
                  },
                  "Effect": "Allow"
                }
              ]
            },
            "PolicyName": "adfs-s3-policy"
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "iam:CreateSAMLProvider"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                }
              ]
            },
            "PolicyName": "adfs-idp-policy"
          }
        ],
        "Path": "/",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Effect": "Allow"
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
        "AppstreamADRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {"Ref": "AppstreamStackName"},
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "sts:AssumeRoleWithSAML",
                            "Principal": {
                                "Federated": { "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:saml-provider/${AppstreamStackName}" }
                            },
                            "Condition": {
                                "StringEquals": {
                                    "SAML:aud": [
                                     { "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:saml-provider/${AppstreamStackName}" }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        },

    "ADFSProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ADFSRole"
          }
        ],
        "Path": "/"
      }
    },
    "ADFS1EIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "InstanceId": {
          "Ref": "ADFS1"
        },
        "Domain": "vpc"
      }
    },
    "ADFS2EIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "InstanceId": {
          "Ref": "ADFS2"
        },
        "Domain": "vpc"
      }
    },
    "ADFS1": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Authentication": {
          "S3AccessCreds": {
            "type": "S3",
            "roleName": {
              "Ref": "ADFSRole"
            },
            "buckets": [
              {
                "Ref": "S3BucketName"
              }
            ]
          }
        },
        "AWS::CloudFormation::Init": {
          "configSets": {
            "config": [
              "setup",
              "install"
            ]
          },
          "setup": {
            "files": {
              "C:\\cfn\\cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update ",
                      "path=Resources.ADFS1.Metadata.AWS::CloudFormation::Init ",
                      "action=cfn-init.exe -v -s ",
                      {
                        "Ref": "AWS::StackId"
                      },
                      " -r ADFS1",
                      " --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}scripts/Unzip-Archive.ps1",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\modules\\AWSQuickStart.zip": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}modules/AWSQuickStart.zip",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Join-Domain.ps1": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}scripts/Join-Domain.ps1",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Create-SAML-provider.ps1": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}scripts/Create-SAML-provider.ps1",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Setup-ADFSRelyingPartyTrust.ps1": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}scripts/Setup-ADFSRelyingPartyTrust.ps1",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Create-Share.ps1": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}scripts/Create-Share.ps1",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Disable-CredSSP.ps1": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}scripts/Disable-CredSSP.ps1",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Enable-CredSSP.ps1": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}scripts/Enable-CredSSP.ps1",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Export-Metadata.ps1": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}scripts/Export-Metadata.ps1",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\AWSCLI64PY3.msi": {
                "source": "https://s3.amazonaws.com/aws-cli/AWSCLI64PY3.msi"
              },
              "C:\\cfn\\scripts\\Install-ADFS.ps1": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}scripts/Install-ADFS.ps1",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              }
            },
            "commands": {
              "a-set-execution-policy": {
                "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                "waitAfterCompletion": "0"
              },
              "b-unpack-quickstart-module": {
                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                "waitAfterCompletion": "0"
              },
              "c-init-quickstart-module": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"",
                      "New-AWSQuickStartWaitHandle -Handle '",
                      {
                        "Ref": "ADFS1WaitHandle"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              }
            },
            "services": {
              "windows": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "C:\\cfn\\cfn-hup.conf",
                    "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          },
          "install": {
            "commands": {
              "a-disable-win-fw": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"Get-NetFirewallProfile | Set-NetFirewallProfile -Enabled False\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "b-install-aws-cli": {
                "command": "powershell.exe Start-Process msiexec.exe -Wait -ArgumentList '\/I C:\\cfn\\scripts\\AWSCLI64PY3.msi \/quiet'",
				"cwd" : "C:\\cfn\\scripts"
              },
              "c-install-powershell-ad": {
                "command": "powershell.exe Install-WindowsFeature RSAT-AD-PowerShell"
              },
              "d-rename-computer": {
                "command": "powershell.exe -Command \"Rename-Computer -NewName 'ADFS1' -Restart\"",
                "waitAfterCompletion": "forever"
              },
              "e-join-domain": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '",
                      {
                        "Ref": "DomainDNSName"
                      },
                      "' -UserName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "\\",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "forever"
              },
              "f-create-cert-share": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Create-Share.ps1",
                      " -Path 'c:\\cert'",
                      " -ShareName 'cert'",
                      " -FolderPath 'c:\\'",
                      " -FolderName 'cert'",
                      " -DomainNetBIOSName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "' -DomainAdminUser '",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -DomainAdminPassword '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "' -FullAccessUser '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "\\",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "g-enable-credssp": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Enable-CredSSP.ps1",
                "waitAfterCompletion": "0"
              },
              "h-install-adfs": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Install-ADFS.ps1 -DomainDNSName '",
                      {
                        "Ref": "DomainDNSName"
                      },
                      "' -DomainNetBIOSName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "' -UserName '",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
					  "' -AWSAccountNumber '",
                      {
                        "Ref": "AWS::AccountId"
                      },
					  "' -AppstreamStackName '",
                      {
                        "Ref": "AppstreamStackName"
                      },
                      "' -FirstServer\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "i-disable-credssp": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Disable-CredSSP.ps1\"",
                "waitAfterCompletion": "0"
              },
              "j-export-metadata": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Export-Metadata.ps1\"",
                "waitAfterCompletion": "0"
              },
              "k-create-saml-provider": {
                "command": {
				    "Fn::Join": [
                    "",
                    [
					"powershell.exe aws iam create-saml-provider --saml-metadata-document file:\/\/metadata.xml --name ",
					{"Ref": "AppstreamStackName"}
					]
				]
			   },
				"cwd" : "C:\\cfn\\scripts"
              },
              "l-adfs-relying-party": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Setup-ADFSRelyingPartyTrust.ps1 -AWSAccountNumber '",
                      {
                        "Ref": "AWS::AccountId"
                      },
					  "' -AppstreamStackName' '",
                      {
                        "Ref": "AppstreamStackName"
                      }
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "m-signal-success": {
                "command": "powershell -Command \"Write-AWSQuickStartStatus\"",
                "waitAfterCompletion": "0"
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId": {
          "Ref": "LatestAmiId"
        },
        "IamInstanceProfile": {
          "Ref": "ADFSProfile"
        },
        "InstanceType": {
          "Ref": "ADFSInstanceType"
        },
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "PublicSubnet1ID"
            },
            "GroupSet": [
              {
                "Ref": "DomainMemberSGID"
              },
              {
                "Ref": "ADFSSecurityGroup"
              }
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ADFS1"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "100",
              "VolumeType": "gp2"
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "VirtualName": "ephemeral0"
          }
        ],
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>\n",
                "cfn-init.exe -v -c config -s ",
                {
                  "Ref": "AWS::StackId"
                },
                " -r ADFS1 ",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "</script>"
              ]
            ]
          }
        }
      }
    },
    "ADFS2": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": "ADFS1WaitCondition",
      "Metadata": {
        "AWS::CloudFormation::Authentication": {
          "S3AccessCreds": {
            "type": "S3",
            "roleName": {
              "Ref": "ADFSRole"
            },
            "buckets": [
              {
                "Ref": "S3BucketName"
              }
            ]
          }
        },
        "AWS::CloudFormation::Init": {
          "configSets": {
            "config": [
              "setup",
              "install"
            ]
          },
          "setup": {
            "files": {
              "C:\\cfn\\cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update ",
                      "path=Resources.ADFS2.Metadata.AWS::CloudFormation::Init ",
                      "action=cfn-init.exe -v -s ",
                      {
                        "Ref": "AWS::StackId"
                      },
                      " -r ADFS2",
                      " --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}scripts/Unzip-Archive.ps1",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\modules\\AWSQuickStart.zip": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}modules/AWSQuickStart.zip",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Join-Domain.ps1": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}scripts/Join-Domain.ps1",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Disable-CredSSP.ps1": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}scripts/Disable-CredSSP.ps1",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Enable-CredSSP.ps1": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}scripts/Enable-CredSSP.ps1",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Install-ADFS.ps1": {
                "source": {
                  "Fn::Sub": [
                    "https://${S3BucketName}.s3.amazonaws.com/${S3KeyPrefix}scripts/Install-ADFS.ps1",
                    {
                      "S3Region": {
                        "Fn::If": [
                          "RegionCondition",
                          "s3-us-east-1",
                          "s3"
                        ]
                      }
                    }
                  ]
                },
                "authentication": "S3AccessCreds"
              }
            },
            "commands": {
              "a-set-execution-policy": {
                "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                "waitAfterCompletion": "0"
              },
              "b-unpack-quickstart-module": {
                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                "waitAfterCompletion": "0"
              },
              "c-init-quickstart-module": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"",
                      "New-AWSQuickStartWaitHandle -Handle '",
                      {
                        "Ref": "ADFS2WaitHandle"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              }
            },
            "services": {
              "windows": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "C:\\cfn\\cfn-hup.conf",
                    "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          },
          "install": {
            "commands": {
              "a-disable-win-fw": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"Get-NetFirewallProfile | Set-NetFirewallProfile -Enabled False\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "b-rename-computer": {
                "command": "powershell.exe -Command \"Rename-Computer -NewName 'ADFS2' -Restart\"",
                "waitAfterCompletion": "forever"
              },
              "c-join-domain": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '",
                      {
                        "Ref": "DomainDNSName"
                      },
                      "' -UserName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "\\",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "forever"
              },
              "d-enable-credssp": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Enable-CredSSP.ps1",
                "waitAfterCompletion": "0"
              },
              "e-install-adfs": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Install-ADFS.ps1 -DomainDNSName '",
                      {
                        "Ref": "DomainDNSName"
                      },
                      "' -DomainNetBIOSName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "' -UserName '",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "f-disable-credssp": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Disable-CredSSP.ps1\"",
                "waitAfterCompletion": "0"
              },
              "g-signal-success": {
                "command": "powershell -Command \"Write-AWSQuickStartStatus\"",
                "waitAfterCompletion": "0"
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId": {
          "Ref": "LatestAmiId"
        },
        "IamInstanceProfile": {
          "Ref": "ADFSProfile"
        },
        "InstanceType": {
          "Ref": "ADFSInstanceType"
        },
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "PublicSubnet2ID"
            },
            "GroupSet": [
              {
                "Ref": "DomainMemberSGID"
              },
              {
                "Ref": "ADFSSecurityGroup"
              }
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ADFS2"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "100",
              "VolumeType": "gp2"
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "VirtualName": "ephemeral0"
          }
        ],
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>\n",
                "cfn-init.exe -v -c config -s ",
                {
                  "Ref": "AWS::StackId"
                },
                " -r ADFS2 ",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "</script>"
              ]
            ]
          }
        }
      }
    },
    "ADFS1WaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "DependsOn": "ADFS1",
      "Properties": {
        "Handle": {
          "Ref": "ADFS1WaitHandle"
        },
        "Timeout": "3600"
      }
    },
    "ADFS1WaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "ADFS2WaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "DependsOn": "ADFS2",
      "Properties": {
        "Handle": {
          "Ref": "ADFS2WaitHandle"
        },
        "Timeout": "3600"
      }
    },
    "ADFS2WaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "ADFSSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable traffic to ADFS servers on internal network and from internet",
        "VpcId": {
          "Ref": "VPCID"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": {
              "Ref": "VPCCIDR"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": {
              "Ref": "VPCCIDR"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "445",
            "ToPort": "445",
            "CidrIp": {
              "Ref": "VPCCIDR"
            }
          }
        ]
      }
    }
  }
}
